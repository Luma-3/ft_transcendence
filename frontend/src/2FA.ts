import { fetchApi, fetchApiWithNoError } from './api/fetch';
import { TWOFA, API_USER, API_SESSION } from './api/routes';
import { renderPrivatePage, renderPublicPage } from './controllers/renderPage';
import { alertTemporary } from './components/ui/alert/alertTemporary';

import { headerPage } from './components/ui/headerPage';
import { primaryButton } from './components/ui/buttons/primaryButton';
import { socketConnection } from './socket/Socket';

export async function change2FA() {

	/**
	 * ! Fetch pour verifier si il a activer le 2Fa pour que le bouton propose soit de 'enable2fa' ou 'disable2fa'(enable2fa et disable2fa ne sont pas les textes affiches mais le cle pour la traduction)
	*/
	const response = await fetchApiWithNoError(API_USER.TWOFA, {
		method: 'GET'
	})

	let id = 'enable2fa';
	let translate = 'enable-2fa';
	
	const responseData = response.data as { twofa: Boolean };

	if (response.status === 'success') {
		if (responseData.twofa === true) {
			id = 'disable2fa';
			translate = 'disable-2fa';
		}
	}
	
	let container = `
	<div class="grid sm:grid-cols-2 gap-4 items-center">
		
		<div class="title-responsive-size font-title justify-center" translate="2fa-auth">

			2FA Authentication

		</div>

		${primaryButton({id: id , weight: "1/4", text: 'Activate 2FA', translate: translate, type: 'button'})}

	</div>`

	if (id === 'enable2fa') {
		container += `
		<div class="flex flex-col p-2 max-w-[800px] justify-center items-center w-full text-responsive-size font-title" translate="2fa-warning">
			
			Warning ! <br>
			No 2FA reduces security
			(as anyone can access your account)<br> and increases the
			risk of accidental actions.<br> This is not recommended !

		</div>`
	}
	return container;
}

/** 
* ! Quand l'utilisateur clique sur le bouton id = 'enable2fa' 
*/
export async function enable2FA() {
	let response = await fetchApiWithNoError(API_USER.TWOFA, {
		method: 'GET'
	})

	console.log(response);

	response = await fetchApiWithNoError(API_USER.TWOFA, {
		method: 'PUT',
		headers: { "Content-Type": "text/plain" }
	})

	console.log(response);

	if (response.status === 'error') {
		return await alertTemporary("error", "Cannot enable 2FA, please reload the page and retry", 'dark')
	}
	renderPublicPage('2FA')
}

export async function disable2FA() {
	const response = await fetchApiWithNoError(API_USER.TWOFA, {
		method: 'DELETE',
		headers: { "Content-Type": "text/plain" }
	})
	if (response.status === 'error') {
		return await alertTemporary("error", "Cannot disable 2FA, please reload the page and retry", 'dark')
	}
	renderPublicPage('2FA')
}

export async function submit2FACode() {

	console.log("submit2FACode called");
	const codeInput = document.getElementById('2faCodeInput') as HTMLInputElement;
	const code = codeInput.value.trim();
	if (!code) {
		return await alertTemporary("error", "Please enter your 2FA code", 'dark');
	}

	const response = await fetchApiWithNoError(TWOFA.TWOFA, {
		method: 'POST',
		body: JSON.stringify({ code })
	});
	if (response.status === 'error') {
		return await alertTemporary("error", "Invalid 2FA code, please try again", 'dark');
	}

	alertTemporary("success", response.message, 'dark');
	setTimeout(() => {
			socketConnection();
			renderPrivatePage('dashboard');
		}, 1000);
}


export async function submit2FACodeLogin() {

	console.log("submit2FACode called");
	const codeInput = document.getElementById('2faCodeLoginInput') as HTMLInputElement;
	const code = codeInput.value.trim();
	if (!code) {
		return await alertTemporary("error", "Please enter your 2FA code", 'dark');
	}

	const response = await fetchApi(API_SESSION.TWOFA_SESSION, {
		method: 'POST',
		body: JSON.stringify({ code })
	});

	alertTemporary("success", response.message, 'dark');
	setTimeout(() => {
			socketConnection();
			renderPrivatePage('dashboard');
		}, 1000);
}

/**
 * ! Contenu html de la page 2FA
 */
export default async function twoFaPage() {
return `<div class="flex flex-col w-full h-full rounded-lg justify-center mt-30">

	${headerPage("2 Factor Authentification", "private")}

	<div class="flex flex-col w-full h-full rounded-lg justify-center items-center mt-5 mb-10">

		<div class="flex font-title text-responsive-size justify-center w-1/2 items-center text-tertiary dark:text-dtertiary">
			<span translate="2fa-description">To secure your account, please enter the 2FA code generated by your authenticator app.</span>

		</div>

	</div>
	
	<div class="flex flex-col w-full justify-center items-center mb-80 space-y-10">

		<form id="2faCodeForm" class="flex flex-col w-full justify-center items-center space-y-4">
		<label for="2faCodeInput" class="text-responsive-size font-title text-tertiary dark:text-dtertiary" translate="2fa-code">Enter your 2FA code:</label>
		<input type="text" id="2faCodeInput" name="2faCode" class="input-responsive-size w-full max-w-[400px] p-2 border border-gray-300 dark:border-gray-600 text-tertiary dark:text-dtertiary rounded-lg" placeholder="Enter your 2FA code" required />
		${primaryButton({id: 'submit2faCode', weight: "1/4", text: 'Submit 2FA Code', translate: 'submit-2fa-code', type: 'submit'})}
		</form>
	
	</div>
</div>`
}

export async function loginTwoFaPage() {
return `<div class="flex flex-col w-full h-full rounded-lg justify-center mt-30">

	${headerPage("2 Factor Authentification Login :otherfucker", "private")}

	<div class="flex flex-col w-full h-full rounded-lg justify-center items-center mt-5 mb-10">

		<div class="flex font-title text-responsive-size justify-center w-1/2 items-center text-tertiary dark:text-dtertiary">
			<span translate="2fa-description">To secure your account, please enter the 2FA code generated by your authenticator app.</span>

		</div>

	</div>
	
	<div class="flex flex-col w-full justify-center items-center mb-80 space-y-10">

		<form id="2faCodeLoginForm" class="flex flex-col w-full justify-center items-center space-y-4">
		<label for="2faCodeLoginInput" class="text-responsive-size font-title text-tertiary dark:text-dtertiary" translate="2fa-code">Enter your 2FA code:</label>
		<input type="text" id="2faCodeLoginInput" name="2faCode" class="input-responsive-size w-full max-w-[400px] p-2 border border-gray-300 dark:border-gray-600 text-tertiary dark:text-dtertiary rounded-lg" placeholder="Enter your 2FA code" required />
		${primaryButton({id: 'login2faCode', weight: "1/4", text: 'Submit 2FA Code', translate: 'submit-2fa-code', type: 'submit'})}
		</form>
	
	</div>
</div>`
}